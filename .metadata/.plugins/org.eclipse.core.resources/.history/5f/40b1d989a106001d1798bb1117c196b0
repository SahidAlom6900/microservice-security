package com.technoelevate.kafka.producer.controller;

import java.sql.Timestamp;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.technoelevate.kafka.producer.dto.EmployeeDto;
import com.technoelevate.kafka.producer.dto.TopicDetailsDto;
import com.technoelevate.kafka.producer.service.TopicCreationService;

@RestController
@RequestMapping("api/v1/kafka")
public class KafkaProducerController {

	@Autowired
	private TopicCreationService creationService;

	@Autowired
	private KafkaTemplate<String, Object> kafkaTemplate;

	@PostMapping("employee")
	public void sendMessage() {
		Timestamp timestamp = new Timestamp(System.currentTimeMillis());
		EmployeeDto employee = EmployeeDto.builder().contact(123456789l).email("sahid@gmail.com").empId("1234TYC")
				.name("Sahid Alom").build();
		kafkaTemplate.send("employee-topic001", 1, timestamp.getTime(), employee.getEmpId(), employee);
		// topicName,partition,long time,key and object //
	}

	@PostMapping("topic")
	public List<TopicDetailsDto> getAllTopicWithDesc() {
		return creationService.getAllTopicWithDesc();
	}

	@PostMapping("topic/{topicName}")
	public TopicDetailsDto getTopicWithDesc(@PathVariable(name = "topicName") String topicName) {
		return creationService.getTopicWithDesc(topicName);
	}

}
