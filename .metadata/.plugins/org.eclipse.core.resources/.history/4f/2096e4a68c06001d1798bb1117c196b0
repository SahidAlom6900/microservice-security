package com.technoelevate.kafka.producer.controller;

import java.sql.Timestamp;
import java.util.Properties;
import java.util.concurrent.ExecutionException;

import org.apache.kafka.clients.admin.AdminClient;
import org.apache.kafka.clients.admin.AdminClientConfig;
import org.apache.kafka.clients.admin.ListTopicsOptions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.technoelevate.kafka.producer.dto.EmployeeDto;

@RestController
@RequestMapping("api/v1/kafka")
public class KafkaProducerController {

	@Autowired
	private KafkaTemplate<String, Object> kafkaTemplate;
	
	

	@PostMapping("employee")
	public void sendMessage() {
		Timestamp timestamp = new Timestamp(System.currentTimeMillis());
		EmployeeDto employee = EmployeeDto.builder().contact(123456789l).email("sahid@gmail.com").empId("1234TYC")
				.name("Sahid Alom").build();
		kafkaTemplate.send("employee-topic001", 1, timestamp.getTime(), employee.getEmpId(), employee);
		// topicName,partition,long time,key and object //
	}

	@PostMapping("topic")
	public String createTopic() {
		
		Properties properties = new Properties();
		properties.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");

		AdminClient adminClient = AdminClient.create(properties);

		ListTopicsOptions listTopicsOptions = new ListTopicsOptions();
		listTopicsOptions.listInternal(true);

		try {
			System.out.println(adminClient.listTopics(listTopicsOptions).names().get());
		} catch (InterruptedException | ExecutionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		try (AdminClient client = AdminClient.create(kafkaAdmin.getConfigurationProperties()) {
//		}
//		System.out.println("Hi From Kafka");
//		 NewTopic build = TopicBuilder.name("employee-topic001").partitions(3).replicas(3).build();
//		 System.out.println(build.numPartitions());
		 return "Created";
	}

}
