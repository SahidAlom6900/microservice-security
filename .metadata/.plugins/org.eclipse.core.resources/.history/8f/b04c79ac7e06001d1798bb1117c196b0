package com.technoelevate.kafka.consumer;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.kafka.annotation.EnableKafka;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.annotation.PartitionOffset;
import org.springframework.kafka.annotation.TopicPartition;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.handler.annotation.Header;
import org.springframework.messaging.handler.annotation.Payload;

import lombok.extern.slf4j.Slf4j;

@SpringBootApplication
@EnableKafka
@Slf4j
public class KafkaConsumerServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(KafkaConsumerServiceApplication.class, args);
	}

	@KafkaListener(topicPartitions = @TopicPartition(topic = "topic", partitionOffsets = {
			@PartitionOffset(partition = "1", initialOffset = "0") }), groupId = "group-id")
	void listenToParitionWithOffset(@Payload String message, @Header(KafkaHeaders.RECEIVED_PARTITION_ID) int partition,
			@Header(KafkaHeaders.OFFSET) int offset) {
		log.info("ListenToPartitionWithOffset [{}] from partition-{} with offset-{}", message, partition, offset);
	}
	
	@KafkaListener(topics = "topic")
	void listenerForRoutingTemplate(String message) {
		log.info("RoutingTemplate BytesListener [{}]", message);
	}
}
