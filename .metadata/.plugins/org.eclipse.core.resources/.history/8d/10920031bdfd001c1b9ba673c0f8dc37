package com.technoelevate.order_service.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.technoelevate.order_service.dto.OrderDto;
import com.technoelevate.order_service.response.OrderResponse;
import com.technoelevate.order_service.service.OrderService;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping(value = "/api/v1")
@AllArgsConstructor
public class OrderController {

	private final OrderService userService;

	@PostMapping(path = "product")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<OrderResponse> addOrUpdateProduct(@RequestBody List<OrderDto> orderDtos) {
		return ResponseEntity.ok(
				OrderResponse.builder().error(false).message("").data(userService.addOrUpdateProduct(orderDtos)).build());
	}

	@GetMapping(path = "product/{productId}")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<OrderResponse> getProduct(@PathVariable(name = "productId") Long productId) {
		return ResponseEntity
				.ok(OrderResponse.builder().error(false).message("").data(userService.getProduct(productId)).build());
	}

	@GetMapping(path = "products")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<OrderResponse> getAllProduct() {
		return ResponseEntity
				.ok(OrderResponse.builder().error(false).message("").data(userService.getAllProduct()).build());
	}
	
	@DeleteMapping(path = "product/{productId}")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<OrderResponse> deleteProduct(@PathVariable(name = "productId") Long productId) {
		return ResponseEntity
				.ok(OrderResponse.builder().error(false).message("").data(userService.deleteProduct(productId)).build());
	}

}
