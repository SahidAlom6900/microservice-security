package com.technoelevate.order_service.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.technoelevate.order_service.dto.OrderDto;
import com.technoelevate.order_service.response.RoleResponse;
import com.technoelevate.order_service.service.OrderService;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping(value = "/api/v1")
@AllArgsConstructor
public class OrderController {

	private final OrderService userService;

	@PostMapping(path = "order")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<RoleResponse> generateOrder(@RequestBody List<OrderDto> orderDtos) {
		return ResponseEntity
				.ok(RoleResponse.builder().error(false).message("").data(userService.genarateOrder(orderDtos)).build());
	}

	@GetMapping(path = "order/{id}")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<RoleResponse> getOrder(@PathVariable(name = "id") Long id) {
		return ResponseEntity
				.ok(RoleResponse.builder().error(false).message("").data(userService.getOrder(id)).build());
	}
	
	@GetMapping(path = "orders/{orderId}")
	@ResponseStatus(value = HttpStatus.OK)
	public ResponseEntity<RoleResponse> getAllDepartment(@PathVariable(name = "orderId") Long orderId) {
		return ResponseEntity
				.ok(RoleResponse.builder().error(false).message("").data(userService.getAllOrder(orderId)).build());
	}

//	@DeleteMapping(path = "order/{id}")
//	@ResponseStatus(value = HttpStatus.OK)
//	public ResponseEntity<RoleResponse> deleteOrder(@PathVariable(name = "id") Long id) {
//		return ResponseEntity
//				.ok(RoleResponse.builder().error(false).message("").data(userService.deleteOne(id)).build());
//	}

//	@DeleteMapping(path = "orders/{orderId}")
//	@ResponseStatus(value = HttpStatus.OK)
//	public ResponseEntity<RoleResponse> deleteUserOrder(@PathVariable(name = "orderId") Long orderId) {
//		return ResponseEntity
//				.ok(RoleResponse.builder().error(false).message("").data(userService.deleteUserOrder(orderId)).build());
//	}

}
